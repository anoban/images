#pragma once
#include <bitmap>

class canvas final { // a drawing canvas that uses bitmaps as their internal resource
    private:
        bitmap pane;

    public:
        canvas(_In_ const unsigned long long width, _In_ const unsigned long long height) noexcept : pane(width, height) { }

        explicit canvas(_In_ const bitmap& image) noexcept : pane { image } { }

        explicit canvas(_In_ bitmap&& image) noexcept : pane { std::move(image) } { }

        void fill(_In_ const RGBQUAD& pixel) noexcept { std::fill(pane.begin(), pane.end(), pixel); }

        bool to_file(const wchar_t* const filepath) const noexcept { return pane.to_file(filepath); }
};
